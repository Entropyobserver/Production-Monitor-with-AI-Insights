# 1. Updated GitHub Actions workflow
# File: .github/workflows/main_production-monitor-with-ai-insights.yml

name: Build and deploy Python app to Azure Web App - Production-Monitor-with-AI-Insights

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv antenv
          source antenv/bin/activate
      
      - name: Install dependencies
        run: |
          source antenv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Create deployment files
        run: |
          echo "python -m streamlit run app.py --server.port 8000 --server.address 0.0.0.0 --server.headless true" > startup.txt
          echo "python-3.10" > runtime.txt
          echo "[config]" > .deployment
          echo "SCM_DO_BUILD_DURING_DEPLOYMENT=true" >> .deployment
          # Create .streamlit directory if it doesn't exist
          mkdir -p .streamlit
          echo 'GOOGLE_API_KEY = ""' > .streamlit/secrets.toml.template
        
      # Optional: Add step to run tests here

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip . -x "*.git*" "__pycache__/*" "*.pyc" "antenv/*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          rm release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2BDD7F062A6445B4A1BF2847D9594321 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_1F5CFFFD58A04D62BF6480E2CC992765 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_60CE04C7D3FB45CEAEEFB79C05F181C7 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'Production-Monitor-with-AI-Insights'
          slot-name: 'Production'

---

# 2. Streamlit Configuration
# File: .streamlit/config.toml

[server]
headless = true
port = 8000
enableCORS = false
enableXsrfProtection = false

[browser]
gatherUsageStats = false

[theme]
primaryColor = "#1E40AF"
backgroundColor = "#FFFFFF"
secondaryBackgroundColor = "#F8FAFC"
textColor = "#1F2937"

---

# 3. Secrets Template
# File: .streamlit/secrets.toml.template
# Copy this to .streamlit/secrets.toml and add your actual API key

GOOGLE_API_KEY = "your_google_ai_api_key_here"

---

# 4. Environment Variables for Azure App Service
# Set these in Azure Portal > Configuration > Application Settings

GOOGLE_API_KEY=your_google_ai_api_key_here
STREAMLIT_SERVER_HEADLESS=true
STREAMLIT_SERVER_PORT=8000
STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
