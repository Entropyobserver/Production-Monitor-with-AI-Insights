# File: .github/workflows/main_production-monitor-with-ai-insights.yml
name: Build and deploy Python app to Azure Web App - Production-Monitor-with-AI-Insights

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 移除虚拟环境创建和依赖安装步骤，让Azure Oryx处理
      - name: Create Azure deployment files
        run: |
          # Create startup script
          cat > startup.sh << 'EOF'
          #!/bin/bash
          set -e
          
          echo "Starting Production Monitor..."
          echo "Current working directory: $(pwd)"
          echo "Python version: $(python --version)"
          
          # Create .streamlit directory
          mkdir -p .streamlit
          
          # Create secrets.toml from environment variables
          if [ ! -z "$GOOGLE_API_KEY" ]; then
              cat > .streamlit/secrets.toml << SECRETS_EOF
          GOOGLE_API_KEY = "$GOOGLE_API_KEY"
          SECRETS_EOF
              echo "✓ API key configured"
          else
              echo "⚠ No API key found - AI features disabled"
          fi
          
          # Create Streamlit config
          cat > .streamlit/config.toml << CONFIG_EOF
          [server]
          headless = true
          port = 8000
          enableCORS = false
          enableXsrfProtection = false
          maxUploadSize = 50
          
          [browser]
          gatherUsageStats = false
          
          [theme]
          primaryColor = "#1E40AF"
          backgroundColor = "#FFFFFF"
          secondaryBackgroundColor = "#F8FAFC"
          textColor = "#1F2937"
          CONFIG_EOF
          
          # Start Streamlit
          exec python -m streamlit run app.py \
              --server.port=8000 \
              --server.address=0.0.0.0 \
              --server.headless=true
          EOF
          
          chmod +x startup.sh
          
          # Create .deployment file for Azure Oryx
          cat > .deployment << EOF
          [config]
          SCM_DO_BUILD_DURING_DEPLOYMENT=true
          EOF
          
          # Create runtime.txt to specify Python version
          echo "python-3.10" > runtime.txt

      - name: Zip artifact for deployment
        run: |
          # Include everything except git and cache files
          # 重要：不排除任何Python相关文件，让Azure Oryx处理构建
          zip -r release.zip . -x "*.git*" "__pycache__/*" "*.pyc" ".pytest_cache/*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          rm release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2BDD7F062A6445B4A1BF2847D9594321 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_1F5CFFFD58A04D62BF6480E2CC992765 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_60CE04C7D3FB45CEAEEFB79C05F181C7 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'Production-Monitor-with-AI-Insights'
          slot-name: 'Production'
